#!/bin/bash -e

# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

TESTRUN_OUT=/tmp/testrun.log

ifconfig

# Setup requirements
sudo apt-get update
sudo apt-get install openvswitch-common openvswitch-switch tcpdump jq moreutils coreutils isc-dhcp-client

pip3 install pytest

# Setup device network
sudo ip link add dev endev0a type veth peer name endev0b
sudo ip link set dev endev0a up
sudo ip link set dev endev0b up
sudo docker network create -d macvlan -o parent=endev0b endev0

sudo ip link add dev dummynet type dummy

# Start OVS
sudo /usr/share/openvswitch/scripts/ovs-ctl start

# Build Test Container
sudo docker build ./testing/docker/ci_baseline -t ci1 -f  ./testing/docker/ci_baseline/Dockerfile

cat <<EOF >local/system.json
{
  "network": {
    "device_intf": "endev0a",
    "internet_intf": "dummynet"
  },
  "log_level": "DEBUG"
}
EOF

sudo cmd/install

sudo bin/testrun > $TESTRUN_OUT 2>&1 & 
TPID=$!

# Time to wait for testrun to be ready
WAITING=60
for i in `seq 1 $WAITING`; do
    if [[ -n $(fgrep "API waiting for requests" $TESTRUN_OUT) ]]; then
        break
    fi

    if [[ ! -d /proc/$TPID ]]; then
        cat $TESTRUN_OUT
        echo "error encountered starting test run"
        exit 1
    fi
   
    sleep 1
done

if [[ $i -eq $WAITING ]]; then
    cat $TESTRUN_OUT
    echo "failed after waiting $WAITING seconds for test-run start"
    exit 1
fi

pytest testing/baseline/test_api.py

exit $?