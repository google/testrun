/**
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@use '@angular/material' as mat;
@use 'src/theming/m3-theme' as *;

$black: #000000;
$white: #ffffff;

$blue-300: mat.get-theme-color($light-theme, primary, 70);

$color-background-grey: mat.get-theme-color($light-theme, secondary, 80);
$grey-700: mat.get-theme-color($light-theme, secondary, 35);
$grey-800: mat.get-theme-color($light-theme, secondary, 25);
$grey-900: mat.get-theme-color($light-theme, secondary, 10);
$grey-100: mat.get-theme-color($light-theme, secondary, 80);
$light-grey: mat.get-theme-color($light-theme, secondary, 90);
$lighter-grey: mat.get-theme-color($light-theme, secondary, 95);
$dark-grey: $grey-800;

$red-50: mat.get-theme-color($light-theme, error, 90);
$red-300: mat.get-theme-color($light-theme, error, 70);
$red-700: mat.get-theme-color($light-theme, error, 40);
$red-800: mat.get-theme-color($light-theme, error, 30);
$warn: $red-700;

/* CUSTOM */
$green-50: #e6f4ea;
$green-800: #137333;
$orange-700: #a85d00;
$yellow-50: #fef7e0;
$cyan-50: #e4f7fb;
$cyan-900: #007b83;

$primary: mat.get-theme-color($light-theme, primary, 40);
$secondary: mat.get-theme-color($light-theme, secondary, 40);
$tertiary: mat.get-theme-color($light-theme, tertiary, 40);
$error: mat.get-theme-color($light-theme, error, 40);

$on-primary: mat.get-theme-color($light-theme, primary, 100);
$on-secondary: mat.get-theme-color($light-theme, secondary, 100);
$on-tertiary: mat.get-theme-color($light-theme, tertiary, 100);
$on-error: mat.get-theme-color($light-theme, error, 100);

$primary-container: mat.get-theme-color($light-theme, primary, 90);
$secondary-container: mat.get-theme-color($light-theme, secondary, 90);
$tertiary-container: mat.get-theme-color($light-theme, tertiary, 90);
$error-container: mat.get-theme-color($light-theme, error, 90);

$on-primary-container: mat.get-theme-color($light-theme, primary, 30);
$on-secondary-container: mat.get-theme-color($light-theme, secondary, 30);
$on-tertiary-container: mat.get-theme-color($light-theme, tertiary, 30);
$on-error-container: mat.get-theme-color($light-theme, error, 30);

$primary-fixed: mat.get-theme-color($light-theme, primary, 90);
$primary-fixed-dim: mat.get-theme-color($light-theme, primary, 80);
$on-primary-fixed: mat.get-theme-color($light-theme, primary, 10);
$on-primary-fixed-variant: mat.get-theme-color($light-theme, primary, 30);

$secondary-fixed: mat.get-theme-color($light-theme, secondary, 90);
$secondary-fixed-dim: mat.get-theme-color($light-theme, secondary, 80);
$on-secondary-fixed: mat.get-theme-color($light-theme, secondary, 10);
$on-secondary-fixed-variant: mat.get-theme-color($light-theme, secondary, 30);

$tertiary-fixed: mat.get-theme-color($light-theme, tertiary, 90);
$tertiary-fixed-dim: mat.get-theme-color($light-theme, tertiary, 80);
$on-tertiary-fixed: mat.get-theme-color($light-theme, tertiary, 10);
$on-tertiary-fixed-variant: mat.get-theme-color($light-theme, tertiary, 30);

$surface-dim: #D3DBE5;
$surface: mat.get-theme-color($light-theme, neutral, 100);
$surface-bright: mat.get-theme-color($light-theme, neutral, 100);
$surface-container-lowest: mat.get-theme-color($light-theme, neutral, 100);
$surface-container-low: #F8FAFD;
$surface-container: #F0F4F9;
$surface-container-high: #E9EEF6;
$surface-container-highest: #DDE3EA;
$on-surface: mat.get-theme-color($light-theme, neutral, 10);
$on-surface-variant: mat.get-theme-color($light-theme, neutral-variant, 30);
$outline: mat.get-theme-color($light-theme, neutral-variant, 50);
$outline-variant: mat.get-theme-color($light-theme, neutral-variant, 80);

$inverse-surface: mat.get-theme-color($light-theme, neutral, 20);
$inverse-on-surface: mat.get-theme-color($light-theme, neutral, 95);
$inverse-primary: mat.get-theme-color($light-theme, neutral, 80);
$scrim: mat.get-theme-color($light-theme, neutral, 0);
$shadow: mat.get-theme-color($light-theme, neutral, 0);
